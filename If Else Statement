{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "e7a0177b-cf83-40bc-bf91-6e4ba12a69e7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "It worked\n"
     ]
    }
   ],
   "source": [
    "if 25 > 10:\n",
    "    print('It worked')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "7bf1b349-9473-4185-a020-4b189f03c003",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "It worked\n"
     ]
    }
   ],
   "source": [
    "if (25 < 10) or (1 < 3):\n",
    "    print('It worked')\n",
    "elif 25 < 15:\n",
    "    print('Elif 1 worked')\n",
    "elif 25 < 20:\n",
    "    print('Elif 2 worked')\n",
    "elif 25 < 30:\n",
    "    print('Elif 3 worked')\n",
    "elif 25 < 40:\n",
    "    print('Elif 4 worked')    \n",
    "else:\n",
    "    print('It did not work')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "897f1457-8c65-4be8-b030-2266e78dc531",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "It did not work\n"
     ]
    }
   ],
   "source": [
    "print('It worked!') if 10>30 else print('It did not work')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "36f73800-8317-40d1-a648-8166900b4291",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "It worked\n",
      "This nested if statement worked!\n"
     ]
    }
   ],
   "source": [
    "if (25 < 10) or (1 < 3):\n",
    "    print('It worked')\n",
    "    if 10 > 5:\n",
    "        print('This nested if statement worked!')\n",
    "elif 25 < 15:\n",
    "    print('Elif 1 worked')\n",
    "elif 25 < 20:\n",
    "    print('Elif 2 worked')\n",
    "elif 25 < 30:\n",
    "    print('Elif 3 worked')\n",
    "elif 25 < 40:\n",
    "    print('Elif 4 worked')    \n",
    "else:\n",
    "    print('It did not work')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e8676c36-e50f-4e4d-bc58-7c7dc9133bdf",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7e343e5f-5ace-4707-96b0-7a3d109f4748",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d5c8d466-e68c-4d18-b894-4f663282eee4",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2b85d8a7-eed9-4999-8a2c-20b82e438f54",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "efdc6de7-7859-4cf8-8cd0-0d316716a0b4",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9131eee0-b7a1-4a5d-ac99-3abb85b08b3a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b91462ce-060d-4995-be7f-29e60262409b",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c00e1d85-4404-41ff-8c21-5a876c1bff4e",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d2b55b6b-8ac1-4f15-84af-4bd951e003d5",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1eb69ae7-7b45-4f4f-9ee9-f122b80d213f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "79a29250-2bb4-4085-9135-85cd01ec8f91",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "96fb7944-77e8-4e11-b6d1-4ff2784e22e0",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e79e3a40-b447-499b-86da-710978d5ff0f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1865c645-941d-48ac-bc01-c7588929e46a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4f0b622f-34da-485e-a7bd-c8aec4b4bf06",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
